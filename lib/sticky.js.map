{"version":3,"file":"sticky.js","sources":["../src-js/plugins/sticky.js"],"sourcesContent":["const sticky = {\n    name: 'sticky',\n    defaultValue: false,\n    fn(instance) {\n        const { reference, popper } = instance;\n        function getReference() {\n            return instance.popperInstance\n                ? instance.popperInstance.state.elements.reference\n                : reference;\n        }\n        function shouldCheck(value) {\n            return instance.props.sticky === true || instance.props.sticky === value;\n        }\n        let prevRefRect = null;\n        let prevPopRect = null;\n        function updatePosition() {\n            const currentRefRect = shouldCheck('reference')\n                ? getReference().getBoundingClientRect()\n                : null;\n            const currentPopRect = shouldCheck('popper')\n                ? popper.getBoundingClientRect()\n                : null;\n            if ((currentRefRect && areRectsDifferent(prevRefRect, currentRefRect)) ||\n                (currentPopRect && areRectsDifferent(prevPopRect, currentPopRect))) {\n                if (instance.popperInstance) {\n                    instance.popperInstance.update();\n                }\n            }\n            prevRefRect = currentRefRect;\n            prevPopRect = currentPopRect;\n            if (instance.state.isMounted) {\n                requestAnimationFrame(updatePosition);\n            }\n        }\n        return {\n            onMount() {\n                if (instance.props.sticky) {\n                    updatePosition();\n                }\n            },\n        };\n    },\n};\nexport default sticky;\nfunction areRectsDifferent(rectA, rectB) {\n    if (rectA && rectB) {\n        return (rectA.top !== rectB.top ||\n            rectA.right !== rectB.right ||\n            rectA.bottom !== rectB.bottom ||\n            rectA.left !== rectB.left);\n    }\n    return true;\n}\n"],"names":["sticky","name","defaultValue","fn","instance","reference","popper","getReference","popperInstance","state","elements","shouldCheck","value","props","prevRefRect","prevPopRect","updatePosition","currentRefRect","getBoundingClientRect","currentPopRect","areRectsDifferent","update","isMounted","requestAnimationFrame","onMount","rectA","rectB","top","right","bottom","left"],"mappings":";;;;;AAAA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,QADK;AAEXC,EAAAA,YAAY,EAAE,KAFH;AAGXC,EAAAA,EAHW,cAGRC,QAHQ,EAGE;AAAA,QACDC,SADC,GACqBD,QADrB,CACDC,SADC;AAAA,QACUC,MADV,GACqBF,QADrB,CACUE,MADV;;AAET,aAASC,YAAT,GAAwB;AACpB,aAAOH,QAAQ,CAACI,cAAT,GACDJ,QAAQ,CAACI,cAAT,CAAwBC,KAAxB,CAA8BC,QAA9B,CAAuCL,SADtC,GAEDA,SAFN;AAGH;;AACD,aAASM,WAAT,CAAqBC,KAArB,EAA4B;AACxB,aAAOR,QAAQ,CAACS,KAAT,CAAeb,MAAf,KAA0B,IAA1B,IAAkCI,QAAQ,CAACS,KAAT,CAAeb,MAAf,KAA0BY,KAAnE;AACH;;AACD,QAAIE,WAAW,GAAG,IAAlB;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,aAASC,cAAT,GAA0B;AACtB,UAAMC,cAAc,GAAGN,WAAW,CAAC,WAAD,CAAX,GACjBJ,YAAY,GAAGW,qBAAf,EADiB,GAEjB,IAFN;AAGA,UAAMC,cAAc,GAAGR,WAAW,CAAC,QAAD,CAAX,GACjBL,MAAM,CAACY,qBAAP,EADiB,GAEjB,IAFN;;AAGA,UAAKD,cAAc,IAAIG,iBAAiB,CAACN,WAAD,EAAcG,cAAd,CAApC,IACCE,cAAc,IAAIC,iBAAiB,CAACL,WAAD,EAAcI,cAAd,CADxC,EACwE;AACpE,YAAIf,QAAQ,CAACI,cAAb,EAA6B;AACzBJ,UAAAA,QAAQ,CAACI,cAAT,CAAwBa,MAAxB;AACH;AACJ;;AACDP,MAAAA,WAAW,GAAGG,cAAd;AACAF,MAAAA,WAAW,GAAGI,cAAd;;AACA,UAAIf,QAAQ,CAACK,KAAT,CAAea,SAAnB,EAA8B;AAC1BC,QAAAA,qBAAqB,CAACP,cAAD,CAArB;AACH;AACJ;;AACD,WAAO;AACHQ,MAAAA,OADG,qBACO;AACN,YAAIpB,QAAQ,CAACS,KAAT,CAAeb,MAAnB,EAA2B;AACvBgB,UAAAA,cAAc;AACjB;AACJ;AALE,KAAP;AAOH;AAzCU,CAAf;;AA4CA,SAASI,iBAAT,CAA2BK,KAA3B,EAAkCC,KAAlC,EAAyC;AACrC,MAAID,KAAK,IAAIC,KAAb,EAAoB;AAChB,WAAQD,KAAK,CAACE,GAAN,KAAcD,KAAK,CAACC,GAApB,IACJF,KAAK,CAACG,KAAN,KAAgBF,KAAK,CAACE,KADlB,IAEJH,KAAK,CAACI,MAAN,KAAiBH,KAAK,CAACG,MAFnB,IAGJJ,KAAK,CAACK,IAAN,KAAeJ,KAAK,CAACI,IAHzB;AAIH;;AACD,SAAO,IAAP;AACH;;;;"}