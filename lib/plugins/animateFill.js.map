{"version":3,"file":"animateFill.js","sources":["../../src-js/constants.js","../../src-js/utils.js","../../src-js/dom-utils.js","../../src-js/template.js","../../src-js/validation.js","../../src-js/plugins/animateFill.js"],"sourcesContent":["export const ROUND_ARROW = '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\nexport const BOX_CLASS = `__NAMESPACE_PREFIX__-box`;\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`;\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`;\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`;\nexport const SVG_ARROW_CLASS = `__NAMESPACE_PREFIX__-svg-arrow`;\nexport const TOUCH_OPTIONS = { passive: true, capture: true };\nexport const TIPPY_DEFAULT_APPEND_TO = () => document.body;\n","export function hasOwnProperty(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n}\nexport function getValueAtIndexOrReturn(value, index, defaultValue) {\n    if (Array.isArray(value)) {\n        const v = value[index];\n        return v == null\n            ? Array.isArray(defaultValue)\n                ? defaultValue[index]\n                : defaultValue\n            : v;\n    }\n    return value;\n}\nexport function isType(value, type) {\n    const str = {}.toString.call(value);\n    return str.indexOf('[object') === 0 && str.indexOf(`${type}]`) > -1;\n}\nexport function invokeWithArgsOrReturn(value, args) {\n    return typeof value === 'function' ? value(...args) : value;\n}\nexport function debounce(fn, ms) {\n    // Avoid wrapping in `setTimeout` if ms is 0 anyway\n    if (ms === 0) {\n        return fn;\n    }\n    let timeout;\n    return (arg) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            fn(arg);\n        }, ms);\n    };\n}\nexport function removeProperties(obj, keys) {\n    const clone = Object.assign({}, obj);\n    keys.forEach((key) => {\n        delete clone[key];\n    });\n    return clone;\n}\nexport function splitBySpaces(value) {\n    return value.split(/\\s+/).filter(Boolean);\n}\nexport function normalizeToArray(value) {\n    return [].concat(value);\n}\nexport function pushIfUnique(arr, value) {\n    if (arr.indexOf(value) === -1) {\n        arr.push(value);\n    }\n}\nexport function appendPxIfNumber(value) {\n    return typeof value === 'number' ? `${value}px` : value;\n}\nexport function unique(arr) {\n    return arr.filter((item, index) => arr.indexOf(item) === index);\n}\nexport function getNumber(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\nexport function getBasePlacement(placement) {\n    return placement.split('-')[0];\n}\nexport function arrayFrom(value) {\n    return [].slice.call(value);\n}\nexport function removeUndefinedProps(obj) {\n    return Object.keys(obj).reduce((acc, key) => {\n        if (obj[key] !== undefined) {\n            acc[key] = obj[key];\n        }\n        return acc;\n    }, {});\n}\n","import { arrayFrom, isType, normalizeToArray, getBasePlacement } from './utils';\nexport function div() {\n    return document.createElement('div');\n}\nexport function isElement(value) {\n    return ['Element', 'Fragment'].some((type) => isType(value, type));\n}\nexport function isNodeList(value) {\n    return isType(value, 'NodeList');\n}\nexport function isMouseEvent(value) {\n    return isType(value, 'MouseEvent');\n}\nexport function isReferenceElement(value) {\n    return !!(value && value._tippy && value._tippy.reference === value);\n}\nexport function getArrayOfElements(value) {\n    if (isElement(value)) {\n        return [value];\n    }\n    if (isNodeList(value)) {\n        return arrayFrom(value);\n    }\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return arrayFrom(document.querySelectorAll(value));\n}\nexport function setTransitionDuration(els, value) {\n    els.forEach((el) => {\n        if (el) {\n            el.style.transitionDuration = `${value}ms`;\n        }\n    });\n}\nexport function setVisibilityState(els, state) {\n    els.forEach((el) => {\n        if (el) {\n            el.setAttribute('data-state', state);\n        }\n    });\n}\nexport function getOwnerDocument(elementOrElements) {\n    var _a;\n    const [element] = normalizeToArray(elementOrElements);\n    // Elements created via a <template> have an ownerDocument with no reference to the body\n    return ((_a = element === null || element === void 0 ? void 0 : element.ownerDocument) === null || _a === void 0 ? void 0 : _a.body) ? element.ownerDocument : document;\n}\nexport function isCursorOutsideInteractiveBorder(popperTreeData, event) {\n    const { clientX, clientY } = event;\n    return popperTreeData.every(({ popperRect, popperState, props }) => {\n        const { interactiveBorder } = props;\n        const basePlacement = getBasePlacement(popperState.placement);\n        const offsetData = popperState.modifiersData.offset;\n        if (!offsetData) {\n            return true;\n        }\n        const topDistance = basePlacement === 'bottom' ? offsetData.top.y : 0;\n        const bottomDistance = basePlacement === 'top' ? offsetData.bottom.y : 0;\n        const leftDistance = basePlacement === 'right' ? offsetData.left.x : 0;\n        const rightDistance = basePlacement === 'left' ? offsetData.right.x : 0;\n        const exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n        const exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n        const exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n        const exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n        return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n    });\n}\nexport function updateTransitionEndListener(box, action, listener) {\n    const method = `${action}EventListener`;\n    // some browsers apparently support `transition` (unprefixed) but only fire\n    // `webkitTransitionEnd`...\n    ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n        box[method](event, listener);\n    });\n}\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */\nexport function actualContains(parent, child) {\n    var _a, _b;\n    let target = child;\n    while (target) {\n        if (parent.contains(target)) {\n            return true;\n        }\n        target = (_b = (_a = target.getRootNode) === null || _a === void 0 ? void 0 : _a.call(target)) === null || _b === void 0 ? void 0 : _b.host;\n    }\n    return false;\n}\n","import { ARROW_CLASS, BACKDROP_CLASS, BOX_CLASS, CONTENT_CLASS, SVG_ARROW_CLASS, } from './constants';\nimport { div, isElement } from './dom-utils';\nimport { arrayFrom } from './utils';\n// Firefox extensions don't allow .innerHTML = \"...\" property. This tricks it.\nconst innerHTML = () => 'innerHTML';\nfunction dangerouslySetInnerHTML(element, html) {\n    element[innerHTML()] = html;\n}\nfunction createArrowElement(value) {\n    const arrow = div();\n    if (value === true) {\n        arrow.className = ARROW_CLASS;\n    }\n    else {\n        arrow.className = SVG_ARROW_CLASS;\n        if (isElement(value)) {\n            arrow.appendChild(value);\n        }\n        else {\n            dangerouslySetInnerHTML(arrow, value);\n        }\n    }\n    return arrow;\n}\nexport function setContent(content, props) {\n    if (isElement(props.content)) {\n        dangerouslySetInnerHTML(content, '');\n        content.appendChild(props.content);\n    }\n    else if (typeof props.content !== 'function') {\n        if (props.allowHTML) {\n            dangerouslySetInnerHTML(content, props.content);\n        }\n        else {\n            content.textContent = props.content;\n        }\n    }\n}\nexport function getChildren(popper) {\n    const box = popper.firstElementChild;\n    const boxChildren = arrayFrom(box.children);\n    return {\n        box,\n        content: boxChildren.find((node) => node.classList.contains(CONTENT_CLASS)),\n        arrow: boxChildren.find((node) => node.classList.contains(ARROW_CLASS) ||\n            node.classList.contains(SVG_ARROW_CLASS)),\n        backdrop: boxChildren.find((node) => node.classList.contains(BACKDROP_CLASS)),\n    };\n}\nexport function render(instance) {\n    const popper = div();\n    const box = div();\n    box.className = BOX_CLASS;\n    box.setAttribute('data-state', 'hidden');\n    box.setAttribute('tabindex', '-1');\n    const content = div();\n    content.className = CONTENT_CLASS;\n    content.setAttribute('data-state', 'hidden');\n    setContent(content, instance.props);\n    popper.appendChild(box);\n    box.appendChild(content);\n    onUpdate(instance.props, instance.props);\n    function onUpdate(prevProps, nextProps) {\n        const { box, content, arrow } = getChildren(popper);\n        if (nextProps.theme) {\n            box.setAttribute('data-theme', nextProps.theme);\n        }\n        else {\n            box.removeAttribute('data-theme');\n        }\n        if (typeof nextProps.animation === 'string') {\n            box.setAttribute('data-animation', nextProps.animation);\n        }\n        else {\n            box.removeAttribute('data-animation');\n        }\n        if (nextProps.inertia) {\n            box.setAttribute('data-inertia', '');\n        }\n        else {\n            box.removeAttribute('data-inertia');\n        }\n        box.style.maxWidth =\n            typeof nextProps.maxWidth === 'number'\n                ? `${nextProps.maxWidth}px`\n                : nextProps.maxWidth;\n        if (nextProps.role) {\n            box.setAttribute('role', nextProps.role);\n        }\n        else {\n            box.removeAttribute('role');\n        }\n        if (prevProps.content !== nextProps.content ||\n            prevProps.allowHTML !== nextProps.allowHTML) {\n            setContent(content, instance.props);\n        }\n        if (nextProps.arrow) {\n            if (!arrow) {\n                box.appendChild(createArrowElement(nextProps.arrow));\n            }\n            else if (prevProps.arrow !== nextProps.arrow) {\n                box.removeChild(arrow);\n                box.appendChild(createArrowElement(nextProps.arrow));\n            }\n        }\n        else if (arrow) {\n            box.removeChild(arrow);\n        }\n    }\n    return {\n        popper,\n        onUpdate,\n    };\n}\n// Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\nrender.$$tippy = true;\n","export function createMemoryLeakWarning(method) {\n    const txt = method === 'destroy' ? 'n already-' : ' ';\n    return [\n        `${method}() was called on a${txt}destroyed instance. This is a no-op but`,\n        'indicates a potential memory leak.',\n    ].join(' ');\n}\nexport function clean(value) {\n    const spacesAndTabs = /[ \\t]{2,}/g;\n    const lineStartWithSpaces = /^[ \\t]*/gm;\n    return value\n        .replace(spacesAndTabs, ' ')\n        .replace(lineStartWithSpaces, '')\n        .trim();\n}\nfunction getDevMessage(message) {\n    return clean(`\n  %ctippy.js\n\n  %c${clean(message)}\n\n  %c👷‍ This is a development-only message. It will be removed in production.\n  `);\n}\nexport function getFormattedMessage(message) {\n    return [\n        getDevMessage(message),\n        // title\n        'color: #00C584; font-size: 1.3em; font-weight: bold;',\n        // message\n        'line-height: 1.5',\n        // footer\n        'color: #a6a095;',\n    ];\n}\n// Assume warnings and errors never have the same message\nlet visitedMessages;\nif (__DEV__) {\n    resetVisitedMessages();\n}\nexport function resetVisitedMessages() {\n    visitedMessages = new Set();\n}\nexport function warnWhen(condition, message) {\n    if (condition && !visitedMessages.has(message)) {\n        visitedMessages.add(message);\n        console.warn(...getFormattedMessage(message));\n    }\n}\nexport function errorWhen(condition, message) {\n    if (condition && !visitedMessages.has(message)) {\n        visitedMessages.add(message);\n        console.error(...getFormattedMessage(message));\n    }\n}\nexport function validateTargets(targets) {\n    const didPassFalsyValue = !targets;\n    const didPassPlainObject = Object.prototype.toString.call(targets) === '[object Object]' &&\n        !targets.addEventListener;\n    errorWhen(didPassFalsyValue, [\n        'tippy() was passed',\n        '`' + String(targets) + '`',\n        'as its targets (first) argument. Valid types are: String, Element,',\n        'Element[], or NodeList.',\n    ].join(' '));\n    errorWhen(didPassPlainObject, [\n        'tippy() was passed a plain object which is not supported as an argument',\n        'for virtual positioning. Use props.getReferenceClientRect instead.',\n    ].join(' '));\n}\n","import { BACKDROP_CLASS } from '../constants';\nimport { div, setVisibilityState } from '../dom-utils';\nimport { getChildren } from '../template';\nimport { errorWhen } from '../validation';\nconst animateFill = {\n    name: 'animateFill',\n    defaultValue: false,\n    fn(instance) {\n        var _a;\n        // @ts-ignore\n        if (!((_a = instance.props.render) === null || _a === void 0 ? void 0 : _a.$$tippy)) {\n            if (__DEV__) {\n                errorWhen(instance.props.animateFill, 'The `animateFill` plugin requires the default render function.');\n            }\n            return {};\n        }\n        const { box, content } = getChildren(instance.popper);\n        const backdrop = instance.props.animateFill\n            ? createBackdropElement()\n            : null;\n        return {\n            onCreate() {\n                if (backdrop) {\n                    box.insertBefore(backdrop, box.firstElementChild);\n                    box.setAttribute('data-animatefill', '');\n                    box.style.overflow = 'hidden';\n                    instance.setProps({ arrow: false, animation: 'shift-away' });\n                }\n            },\n            onMount() {\n                if (backdrop) {\n                    const { transitionDuration } = box.style;\n                    const duration = Number(transitionDuration.replace('ms', ''));\n                    // The content should fade in after the backdrop has mostly filled the\n                    // tooltip element. `clip-path` is the other alternative but is not\n                    // well-supported and is buggy on some devices.\n                    content.style.transitionDelay = `${Math.round(duration / 10)}ms`;\n                    backdrop.style.transitionDuration = transitionDuration;\n                    setVisibilityState([backdrop], 'visible');\n                }\n            },\n            onShow() {\n                if (backdrop) {\n                    backdrop.style.transitionDuration = '0ms';\n                }\n            },\n            onHide() {\n                if (backdrop) {\n                    setVisibilityState([backdrop], 'hidden');\n                }\n            },\n        };\n    },\n};\nexport default animateFill;\nfunction createBackdropElement() {\n    const backdrop = div();\n    backdrop.className = BACKDROP_CLASS;\n    setVisibilityState([backdrop], 'hidden');\n    return backdrop;\n}\n"],"names":["CONTENT_CLASS","BACKDROP_CLASS","ARROW_CLASS","SVG_ARROW_CLASS","arrayFrom","value","slice","call","div","document","createElement","setVisibilityState","els","state","forEach","el","setAttribute","getChildren","popper","box","firstElementChild","boxChildren","children","content","find","node","classList","contains","arrow","backdrop","clean","spacesAndTabs","lineStartWithSpaces","replace","trim","getDevMessage","message","getFormattedMessage","visitedMessages","resetVisitedMessages","Set","errorWhen","condition","has","add","console","error","animateFill","name","defaultValue","fn","instance","_a","props","render","$$tippy","createBackdropElement","onCreate","insertBefore","style","overflow","setProps","animation","onMount","transitionDuration","duration","Number","transitionDelay","Math","round","onShow","onHide","className"],"mappings":"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"}